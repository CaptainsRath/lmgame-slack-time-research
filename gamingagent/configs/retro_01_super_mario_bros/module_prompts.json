{
    "base_module": {
        "system_prompt": "You are playing Super Mario Bros. Your goal is to help Mario progress through the level safely and efficiently.\nIMPORTANT: You MUST format your response using EXACTLY these lines:\nthought: [Your reasoning about the game state]\nmove: (action_name, frame_count)\n\nDo not include # or any other prefix. Start directly with \"thought:\" followed by your analysis.",
        "prompt": "Current Game State (Textual):\n{textual_representation}\n\nSuper Mario Bros Quick Guide:\nPrimary Goal: Survive as long as possible and make it to the end of the level (move right until the flag).\nSecondary Goal: Collect coins and defeat enemies when possible, and hit question mark blocks when safe.\n\nAction Space (Format: move: (action_name_from_list, frame_count) where frame_count is 1-30 and action_name_from_list MUST be one of the following exact strings):\n- [noop]: Do nothing \n [right]: Move right (Hold RIGHT button) \n [right_a]: Move right and jump (Hold RIGHT, press A) \n [right_b]: Move right and run (Hold RIGHT, hold B) \n [right_a_b]: Move right, jump, and run (Hold RIGHT, press A, hold B) - For clearing large obstacles\n- [a]: Jump in place (Press A) - Jump when enemies are very close\n- [b]: Hold B - Useful for running if already moving \n- [left]: Move left (Hold LEFT button) \n- [left_a]: Move left and jump (Hold LEFT, press A) \n- [left_b]: Move left and run (Hold LEFT, hold B) \n- [left_a_b]: Move left, jump, and run (Hold LEFT, press A, hold B)\n- [down]: Move down (Hold DOWN button - e.g., into pipes if applicable)\n\nAction Planning Guidelines:\n- Short sequences (1-15 frames): Use for precise positioning or immediate reactions\n- Long sequences (16-30 frames): Use for committed actions like clearing large gaps or long runs\n- Frame count selection: Consider momentum - more frames = more speed/distance\n\nKey Strategies:\n- Approaching gaps: Use short sequences to prepare, then commit to a jump\n- Enemies: Jump over enemies when close. If unsure, move back or jump in place\n- Speed management: Don't rush as unseen enemies may appear from off-screen\n- Close-range obstacles: Use [right_a] instead of [right_a_b] when Mario is very close to pipes or obstacles \n- Getting unstuck: If Mario is stuck and can't jump over a pipe, use [right_a] 30 or [right_a_b] 30 with maximum frames to build enough momentum and height\n- Approaching gaps (detailed): Be extremely cautious. Use short sequences first to prepare positioning (e.g., 5-10 frames), then commit to a jump with enough momentum (20-30 frames for large gaps)\n- Enemies (detailed): Use defensive jumps when enemies are near. Goombas can be jumped on, Koopas require more caution. If unsure about timing, move back or jump in place\n- Obstacles: Predict what's coming and prepare actions accordingly. Tall pipes may require high jumps with running momentum\n- Defensive play: When in doubt, take a defensive approach (move left, jump in place, or use noop to observe)\n- Momentum for jumps: Running jumps ([right_a_b]) travel much farther than regular jumps ([right_a])\n- Player state awareness: If Mario appears to be falling or in an unstable state, use [noop] briefly to let him stabilize\n\nTactical \n\nBased on the current game state in the image, what action should Mario take next?\nResponse format:\nthought: [your analysis here - consider Mario's position, immediate threats, obstacles ahead, momentum needs, and frame count justification]\nmove: (action_name_from_list, frame_count)"
    },
    "perception_module": {
        "system_prompt": "You are a computer vision system analyzing frames from Super Mario Bros.",
        "prompt": "Analyze this Super Mario Bros frame with the 5x5 grid overlay and identify game elements in each grid cell.\n\nIdentify the following elements and their approximate positions in (x,y) grid coordinates (0,0 top-left to 4,4 bottom-right):\n- Mario (player character)\n- Pipes (green obstacles)\n- Goombas (brown mushroom enemies)\n- Koopas (turtle enemies)\n- Gaps/pits (areas where Mario can fall)\n- Question blocks (blocks with ? that can be hit)\n- Brick blocks (breakable blocks)\n- Coins\n- Power-ups (if visible)\n- Flag pole (end of level)\n\nYour response must be in valid JSON format with the following structure:\n{\n  \"mario\": {\"x\": int, \"y\": int},\n  \"environment\": {\n    \"pipes\": [{\"x\": int, \"y\": int, \"height\": \"small|medium|large\"}],\n    \"goombas\": [{\"x\": int, \"y\": int, \"distance\": \"very_close|close|medium|far\"}],\n    \"koopas\": [{\"x\": int, \"y\": int, \"distance\": \"very_close|close|medium|far\"}],\n    \"gaps\": [{\"x\": int, \"width\": \"small|medium|large\"}],\n    \"question_blocks\": [{\"x\": int, \"y\": int}],\n    \"brick_blocks\": [{\"x\": int, \"y\": int}],\n    \"coins\": [{\"x\": int, \"y\": int}],\n    \"power_ups\": [{\"x\": int, \"y\": int, \"type\": \"mushroom|flower|star\"}],\n    \"flag_pole\": {\"x\": int, \"y\": int} or null\n  },\n  \"game_state\": {\n    \"scroll_direction\": \"right|left|stationary\",\n    \"mario_state\": \"small|big|fire|invincible\",\n    \"immediate_threats\": [\"goomba\"|\"koopa\"|\"gap\"|\"pipe\"],\n    \"obstacles_ahead\": [\"goomba\"|\"koopa\"|\"gap\"|\"pipe\"]\n  }\n}\n\nEnsure all coordinates are integers within the 0-4 range for the 5x5 grid.\nIf an element is not present, include it as an empty array or null as appropriate.\nFor immediate_threats, only include elements that pose an immediate danger to Mario.\nYour output should be ONLY the JSON object, without any surrounding text or markdown."
    },
    "memory_module": {
        "reflection": {
            "prompt": "Please analyze the following game trajectory and current game state to generate a brief reflection.\n\nPrevious Context (older â†’ newer):\n{prev_context}\n\nCurrent Observation:\n{current_observation}\n\nFocus your reflection on:\n1. How the game state (described in 'current_observation') changed after the last action.\n2. Whether the last action was effective for the situation.\n3. Patterns or issues to be aware of from the trajectory.\n4. Any strategic insights for future actions based on this history and current state.\n\nKeep your reflection under 100 words and focus only on the most important insights.",
            "system_prompt": "You are an analytical assistant for a Super Mario Bros AI agent. Your task is to generate a brief reflection on the game state changes and the effectiveness of recent actions. Focus on strategic insights and patterns that would help the agent make better decisions. Keep your reflections short, precise, and actionable."
        }
    },
    "reasoning_module": {
        "system_prompt": "You are playing Super Mario Bros. Your goal is to help Mario progress through the level safely and efficiently.\nIMPORTANT: You MUST format your response using EXACTLY these lines:\nthought: [Your reasoning about the game state]\nmove: (action_name, frame_count)\n\nDo not include # or any other prefix. Start directly with \"thought:\" followed by your analysis.",
        "prompt": "Current Game State:\n{textual_representation}\n\nVisual Analysis:\n{processed_visual_description}\n\nGame Trajectory:\n{game_trajectory}\n\nReflection on Past:\n{reflection}\n\nSuper Mario Bros Quick Guide:\nPrimary Goal: Survive as long as possible and make it to the end of the level (move right until the flag).\nSecondary Goal: Collect coins and defeat enemies when possible, and hit question mark blocks when safe.\n\nAction Space (Format: move: (action_name_from_list, frame_count) where frame_count is 1-30 and action_name_from_list MUST be one of the following exact strings):\n- [noop]: Do nothing \n [right]: Move right (Hold RIGHT button) \n [right_a]: Move right and jump (Hold RIGHT, press A) \n [right_b]: Move right and run (Hold RIGHT, hold B) \n [right_a_b]: Move right, jump, and run (Hold RIGHT, press A, hold B) - For clearing large obstacles\n- [a]: Jump in place (Press A) - Jump when enemies are very close\n- [b]: Hold B - Useful for running if already moving \n- [left]: Move left (Hold LEFT button) \n- [left_a]: Move left and jump (Hold LEFT, press A) \n- [left_b]: Move left and run (Hold LEFT, hold B) \n- [left_a_b]: Move left, jump, and run (Hold LEFT, press A, hold B)\n- [down]: Move down (Hold DOWN button - e.g., into pipes if applicable)\n\nAction Planning Guidelines:\n- Short sequences (1-15 frames): Use for precise positioning or immediate reactions\n- Long sequences (16-30 frames): Use for committed actions like clearing large gaps or long runs\n- Frame count selection: Consider momentum - more frames = more speed/distance\n\nKey Strategies:\n- Approaching gaps: Use short sequences to prepare, then commit to a jump\n- Enemies: Jump over enemies when close. If unsure, move back or jump in place\n- Speed management: Don't rush as unseen enemies may appear from off-screen\n- Close-range obstacles: Use [right_a] instead of [right_a_b] when Mario is very close to pipes or obstacles \n- Getting unstuck: If Mario is stuck and can't jump over a pipe, use [right_a] 30 or [right_a_b] 30 with maximum frames to build enough momentum and height\n- Approaching gaps (detailed): Be extremely cautious. Use short sequences first to prepare positioning (e.g., 5-10 frames), then commit to a jump with enough momentum (20-30 frames for large gaps)\n- Enemies (detailed): Use defensive jumps when enemies are near. Goombas can be jumped on, Koopas require more caution. If unsure about timing, move back or jump in place\n- Obstacles: Predict what's coming and prepare actions accordingly. Tall pipes may require high jumps with running momentum\n- Defensive play: When in doubt, take a defensive approach (move left, jump in place, or use noop to observe)\n- Momentum for jumps: Running jumps ([right_a_b]) travel much farther than regular jumps ([right_a])\n- Player state awareness: If Mario appears to be falling or in an unstable state, use [noop] briefly to let him stabilize\n- Uncertain situation: move: (right, 10) - Cautious forward progress to assess\n\nBased on all available information (textual state, visual analysis, memory, reflection, image itself), what action should Mario take next?\nResponse format:\nthought: [your analysis here - consider Mario's position, immediate threats, obstacles ahead, momentum needs, and frame count justification]\nmove: (action_name_from_list, frame_count)"
    }
} 